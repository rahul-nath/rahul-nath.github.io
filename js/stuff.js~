// initialize hash map here
// if there isn't a hashmap (unlikely), make two arrays


$(document).ready(function(){
    // the equivalent of show and hide 
    var projects = {};
    var names = ['WSO', 'Senior Honors Research', 'Virtual Assembly Emulation', 'Queuer', 'Medicost']; // Laundry List App
    var pictures = ["images/wso.png", "images/dfa.png", "images/assembly.png", "images/queuer.png", "medicost.jpg"];
    
    projects['WSO'] = "Williams Students Online is a student resource website established in 1995. It was estabslished with the purpose of connecting the student body in ways hitherto unimagined; creating a unified Facebook profile for each student at Williams, providing a Lost+Found, an exchange forum, a student body discussion forum, and a ride offering forum among other networking services. Later along in 2005, Ephcatch, a service similar to Tinder exclusively for Williams Students, was established, which allows students to match romantic interests amongst each other anonymously. The framework we use is Ruby on Rails.";
    projects['Senior Honors Research'] = 'I performed research on extending extant algorithms that learn action models from partially observed intermediate state information to learning models from sparse descriptions of action sequences. My goal was to find a way to facilitate closed knowledge loop automation by using the Internet to "fill in" missing information about the environment given information about the domain and the aforementioned action sequences to discover static predicates for the actions.';
    projects['Virtual Assembly Emulation'] = 'Emulated a CISC instruction set using a RISC instruction set. goal of the project was to achieve';
    projects['Queuer'] = 'Developed an app called <strong>Queuer</strong> that allows people to keep track of different tasks they have to do and allows them to manage their completion.';
    projects['Medicost'] = 'A MIT Hacking Medicine Hackathon project designed to make it easy to look up the cost of a medical procedure by doctors accepting Medicare and Medicaid. For those without insurance, it is often difficult to anticipate the cost of expensive treatments until it is too late. My website allows such individuals to see the cost requests made by doctors to insurance companies and how much they received as a result of their requests, along with other information regarding the doctor\'s practice. Data was taken from the depths of the Dept. of Health and Human services website.';
    //projects['Laundry List App'] = 'Helps to create a list of clothes worn in the past week so users know how long it has been worn. Intended for college students.';

    // on click, fade out the nodes of $(#projects)
    var i = 0;
    $('#heading').replaceWith('<h1 id="heading">' + names[i%names.length] + '</h1>');
    $("#text_desc").replaceWith('<p1 id="text_desc">' + projects[names[i%names.length]] + '</p1>');
    var v = $('#picture').attr('src');
    console.log(v);

    // iterate to the next key-value in hashmap
    $('#the-arrow').click(function(){
      // need a callback for each fadeout where you make the change and then fadein
      $('#heading').replaceWith('<h1 id="heading">' + names[i%names.length] + '</h1>');
      $('#heading').fadeIn(3000).delay(1000).fadeOut(10000);
      $("#text_desc").replaceWith('<p1 id="text_desc">' + projects[names[i%names.length]] + '</p1>');
      $("#text_desc").fadeIn(3000).delay(1000).fadeOut(10000);

      $('#picture').attr('src', pictures[i%names.length]);
      var newpic = $('#picture').attr('src');
      console.log(newpic);
      if(i == names.length) i = 1;
      else i += 1;
      return false;
    });
});

    //while(1){

        // for loop here for the hashmap

            // section id is 'two'
            // put the text into a hashmap; value is the text, key is the organization
            // go through each element in the array
            // replace id 'heading' with the key, id 'text_desc' with the value
            // pause for 20 seconds
            // move on to the next description

            // use the class id of "projects"

            // for each child node of $(projects)
            // arrow functionality to move to next iteration of loop
            // fuck it, just do the arrow and advance on click.

/*
            (function myLoop (i) {          
                setTimeout(function () { 
                  for(var d in projects){
                    console.log(d);  
                    $('#heading').fadeOut(5000, function() {
                        $(this).replaceWith('<h2 id="heading">' + d + '</h2>', function() {
                            $(this).fadeIn(1000);
                            $("#text_desc").replaceWith('<p1 id="text_desc">' + projects[d] + '</p1>');
                            var head = $(this);
                            var desc = $("#text_desc")
                            setTimeout(function() { 
                              head.delay(5000).fadeOut(1000);
                              desc.delay(5000).fadeOut(1000);
                            }, 1000);
                        }));
                    }); 
                    if (--i) myLoop(i, d);      //  decrement i and call myLoop again if i > 0
                  }

                }, 3000);
            })(10);                //  pass the number of iterations as an argument
                //$("#heading").replaceWith('<h2 id="heading">' + d + '</h2>');


var i = 1;                     //  set your counter to 1

function myLoop () {           //  create a loop function
   setTimeout(function () {    //  call a 3s setTimeout when the loop is called
      alert('hello');          //  your code here
      i++;                     //  increment the counter
      if (i < 10) {            //  if the counter < 10, call the loop function
         myLoop();             //  ..  again which will trigger another 
      }                        //  ..  setTimeout()
   }, 3000)
}
*/

              //clearTimeout(timeout);

           //$("#text_desc")[0].delay(10000).fadeout(400);
           //make an arrow icon using font awesome
           // make id. if clicked, continue
           //$("arrow").click(function(){
           //    continue;
           // });

    //}